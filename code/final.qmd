---
title: "ENVS 193DS - Final"
author: Scott Wagner
date: "June 4, 2025"
format: html
---

# Github Repository
https://github.com/ScottWag/ENVS-193DS_spring-2025_final

# Setup
```{r}
#| message: false
#| warning: false

#Load in packages
library(tidyverse)
library(here)
library(janitor)
library(dplyr)
library(ggplot2)

#Read in sea surface temperature data
sst <- read_csv(here("data", "SST_update2023.csv"))

```
# Problem 1. Research writing

## a. Transparent statistical methods

In part 1, they used a Pearson correlation to test the linear relationship between the two variables, distance from headwater and nitrogen load. In part 2, they used a one-way ANOVA to test for differences in average nitrogen load among the six different nitrogen sources.

## b. More information needed

Two additional tests/pieces of information that should be included to provide more context for the results would be a test for effect size (eta-squared) and a data visualization (boxplot or bar chart). An effect size test tells the viewer whether the observed differences are statistically significant, represented by a p-value. A data visualization helps communicate the patterns, variability, and group differences in a more accessible way by making the analysis visible.

## c. Suggestions for rewriting

# Problem 2. Data visualization

## a. Cleaning and summarizing

```{r}

#Clean the data
sst_clean <- sst %>%
  mutate(
    date = ymd(date), # converts the 'date' column to date format 
    year_num = year(date), # extracts the numeric year from the date
    month_num = month(date), # extracts the numeric month from the date
    month = factor(substr(month.name[month_num], 1, 3), levels = substr(month.name, 1, 3), ordered = TRUE) # converts months to three letter ordered factor 
  ) %>%
  
  filter(year_num >= 2018 & year_num <= 2023) %>% # only include years 2018-2023
  mutate(year = as.factor(year_num)) %>% #converts numeric year to factor 
  group_by(year, month) %>% # groups by year and month for monthly averages
  summarise(mean_monthly_sst = round(mean(temp, na.rm = TRUE), 1), .groups = "drop") # computs mean sst and round to 1 decimal, ungroup after summarizing 

#Display 5 rows
slice_sample(sst_clean, n =5)
#Display the structure of cleaned data
str(sst_clean)

```

## b. Visualize the data

```{r}
#| message: false
#| warning: false

#Create visual in ggplot
ggplot(sst_clean, aes(x = month, y = mean_monthly_sst, group = year, color = year)) +
  geom_line(linewidth = 1) + # adds lines for each year
  geom_point(size = 2) + # adds dots for each monthly SST value
  scale_y_continuous(limits = c(12.4,20)) + # custom y-axis values
  labs(
    x = "Month", # x-axis label
    y = "Mean monthly sea surface temperature (°C)", # y-axis label
    color = "Year" # legend title
  ) +
  theme_minimal(base_size = 14) + # clean, minimal theme with text size
  theme(
    legend.position = c(0.1, 0.7), # places legend on plot with location
    axis.text.x = element_text(angle = 0), # ensures month labels are horizontal
    panel.grid.minor = element_blank(), # removes major gridlines
    panel.grid.major = element_blank(), # removes minor gridlines
    panel.border = element_rect(color = "black", fill = NA, size = 1) # adds black border
  ) +
  scale_color_brewer(palette = "Blues") # applies sequential blue color by year
```

# Problem 3. Data analysis

## a. Response variable

## b. Purpose of study

## c. Difference in “seasons”

## d. Table of models

## e. Run the models

## f. Check the diagnostics

## g. Select the best model

## h. Visualize model predictions

## i. Write a caption for your figure

## j. Calculate model predictions 

## k. Interpret your results

# Problem 4. Affective and exploratory visualizations

## a. Comparing visualizations

## b. Sharing your affective visualization


